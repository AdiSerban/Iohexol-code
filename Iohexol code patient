#R code for Iohexol clearance 

 library(svDialogs)
 
 Test <- dlgInput(message="Wich test? For volume tap 1 or for syringe weight tap 2")
Test <- as.numeric(Test[["res"]])

if ( Test == 1 )
{
Height <- dlgInput("Patient height in cm")
Height<-as.numeric(Height[["res"]])
Weight <- dlgInput("Patient weight in kg")
Weight<-as.numeric(Weight[["res"]])
Omnipaque_type <- dlgInput("Wich type of Omnipaque?       240mg/mL omnipaque     180mg/mL omnipaque   300mg/mL omnipaque  350mg/mL omnipaque")
Omnipaque_type <-as.numeric(Omnipaque_type[["res"]]) 
Omnipaque_volume <- dlgInput("Omnipaque volume of injection")
Omnipaque_volume <-as.numeric(Omnipaque_volume[["res"]])
Concentration1 <- dlgInput("Concentration 1 in mg/L")
Concentration1<-as.numeric(Concentration1[["res"]])
Time1 <- dlgInput("Time1 in minutes")
Time1<-as.numeric(Time1[["res"]])
Concentration2 <- dlgInput("Concentration 2")
Concentration2<-as.numeric(Concentration2[["res"]])
Time2 <- dlgInput("Time2")
Time2<-as.numeric(Time2[["res"]])
Concentration3 <- dlgInput("Concentration 3")
Concentration3<-as.numeric(Concentration3[["res"]])
Time3 <- dlgInput("Time3")
Time3<-as.numeric(Time3[["res"]])
Concentration4 <- dlgInput("Concentration 4")
Concentration4<-as.numeric(Concentration4[["res"]])
Time4 <- dlgInput("Time4")
Time4<-as.numeric(Time4[["res"]])
Conc<-c(Concentration1,Concentration2,Concentration3,Concentration4)
Time<-c(Time1,Time2,Time3,Time4)

LNconc<-log(Conc)
require(stats)
reg<-lm(LNconc~Time)
coeff=coefficients(reg)
origine<-exp(round(coeff[1],6))
pente<-round(coeff[2],6)
AUC=origine/(abs(pente))

X=Omnipaque_volume
#Defined omnipaque type
Y=Omnipaque_type

dose=X*518/240*Y
#clearance calculation in mL/min
CL=dose*1000/AUC
#BSA calculation by Gehan and Georges
BSA=0.0235*((Height)^0.42246)*((Weight)^0.51456)
#Brochner-Mortensen correction (only the second exponential is evaluated)
CLBM=0.990778*CL-0.001218*(CL^2)
#BSA normalized clearance mL/min/1.73m²
CLBMnormSC=CLBM*(1.73/BSA)


}

if ( Test == 2)
{
Omnipaque_type <- dlgInput("Wich type of Omnipaque?          240mg/mL omnipaque       180mg/mL omnipaque      300mg/mL omnipaque      350mg/mL omnipaque")
Omnipaque_type <-as.numeric(Omnipaque_type[["res"]]) 
BSA <- dlgInput("BSA?")
BSA<-as.numeric(BSA[["res"]]) 
syringe_weight_before <- dlgInput("Syringe weight before in grams ")
syringe_weight_before <-as.numeric(syringe_weight_before[["res"]]) 
syringe_weight_after <- dlgInput("Syringe weight after in grams")
syringe_weight_after <-as.numeric(syringe_weight_after[["res"]]) 
Concentration1 <- dlgInput("Concentration 1 in mg/L")
Concentration1<-as.numeric(Concentration1[["res"]])
Time1 <- dlgInput("Time1 in minutes")
Time1<-as.numeric(Time1[["res"]])
Concentration2 <- dlgInput("Concentration 2")
Concentration2<-as.numeric(Concentration2[["res"]])
Time2 <- dlgInput("Time2")
Time2<-as.numeric(Time2[["res"]])
Concentration3 <- dlgInput("Concentration 3")
Concentration3<-as.numeric(Concentration3[["res"]])
Time3 <- dlgInput("Time3")
Time3<-as.numeric(Time3[["res"]])
Conc<-c(Concentration1,Concentration2,Concentration3)
LNconc<-log(Conc)
Time<-c(Time1,Time2,Time3)
require(stats)
reg<-lm(LNconc~Time)
coeff=coefficients(reg)
origine<-exp(round(coeff[1],6))
pente<-round(coeff[2],6)
AUC=origine/(abs(pente))
if (Omnipaque_type == 240)
{
Density=1.280
}
if (Omnipaque_type == 180)
{
Density=1.209
}
if (Omnipaque_type == 300)
{
Density=1.349
}
if (Omnipaque_type == 350)
{
Density=1.406
}
dose=(syringe_weight_before-syringe_weight_after)*518*1000/Density
CL=dose/AUC
#BSA calculation by Gehan and Georges
#Brochner-Mortensen correction (only the second exponential is evaluated)
CLBM=0.990778*CL-0.001218*(CL^2)
#BSA normalized clearance mL/min/1.73m²
CLBMnormSC=CLBM*(1.73/BSA)
}
#Results


CLBM=round(CLBM,2)
CLBMnormSC=round(CLBMnormSC,2)
a=paste0("Iohexol clearance =", CLBM, "mL/min")
b=paste0("Iohexol clearance normalised at BMI =",CLBMnormSC, "mL/min/1.73m²")

Names<-c("Iohexol clearance =","Iohexol clearance normalised at BMI =")
Results<- c(CLBM,CLBMnormSC)
Unit<-c("mL/min","mL/min/1.73m²")

Names<-cbind(Names,Results,Unit)
rownames(Names)=c(1,2)
View(Names)
